//go:build generate
// +build generate

package main

//go:generate go run gen.go
//go:generate go fmt ./...

import (
	"fmt"
	"log"
	"os"
	"path/filepath"
)

const (
	filename = "/pkg/tables.go"
	pkg      = "money"
	header   = `// Generated by github.com/paulwerner/gomoney/gen. DO NOT EDIT.`
)

func init() {
	Init()
}

func main() {
	f := openFile()
	defer f.Close()

	genTables(f)
}

func genTables(f *os.File) error {
	fmt.Fprintln(f, header)
	fmt.Fprintf(f, "package %s", pkg)
	fmt.Fprintln(f, "")
	return nil
}
func openFile() *os.File {
	wd, err := os.Getwd()
	if err != nil {
		log.Fatalf("error opening working directory: %v", err)
	}
	fp := filepath.Join(wd, filename)
	f, err := os.Create(fp)
	if err != nil {
		log.Fatalf("error creating file: %s", fp)
	}
	return f
}
func Init() {
	log.SetPrefix("GoGen: ")
	log.SetFlags(log.Lshortfile)
}
